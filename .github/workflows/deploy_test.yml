name: FastAPI Deploy CI/CD

on:
  push:
    branches: 
      - dev

env:
  S3_BUCKET: fastapi1243
  LAYER_NAME: python-libraries
  FUNCTION_NAME: fastapi

jobs:
  CI:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        id: cache-pip
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt -t python/lib/python3.10/site-packages/

      - name: Install AWS CLI
        run: sudo apt-get install -y awscli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Verify S3 connection
        run: aws s3 ls s3://$S3_BUCKET

      - name: Package dependencies
        run: |
          cd python
          zip -r9 $GITHUB_WORKSPACE/python.zip .

      - name: Upload dependencies to S3
        run: aws s3 cp $GITHUB_WORKSPACE/python.zip s3://$S3_BUCKET/python.zip

      - name: Update Lambda Layer
        id: update_layer
        run: |
          LAYER_VERSION_ARN=$(aws lambda publish-layer-version \
            --layer-name $LAYER_NAME \
            --content S3Bucket=$S3_BUCKET,S3Key=python.zip \
            --compatible-architectures x86_64 \
            --compatible-runtimes python3.10 \
            --query 'LayerVersionArn' --output text)
          echo "LAYER_VERSION_ARN=$LAYER_VERSION_ARN" >> $GITHUB_ENV

      - name: Package API files
        run: |
          zip -r9 api.zip api

      - name: Verify API Zip Content
        run: unzip -l api.zip

      - name: Upload API files to S3
        run: aws s3 cp api.zip s3://$S3_BUCKET/api.zip

  CD:
    runs-on: ubuntu-latest
    needs: CI
    environment: production
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install AWS CLI
        run: sudo apt-get install -y awscli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Check if Lambda update is in progress
        run: |
          status=$(aws lambda get-function --function-name $FUNCTION_NAME --query 'Configuration.LastModified' --output text)
          echo "Lambda function last modified: $status"
          # Aquí podrías agregar lógica para verificar si el estado de la función está "en progreso" y esperar si es necesario.

      - name: Deploy new Lambda version
        run: |
          aws lambda update-function-code \
            --function-name $FUNCTION_NAME \
            --s3-bucket $S3_BUCKET \
            --s3-key api.zip

      - name: Update Lambda function with new layer
        run: |
          echo "Using layer ARN: ${{ env.LAYER_VERSION_ARN }}"
          aws lambda update-function-configuration \
            --function-name $FUNCTION_NAME \
            --layers ${{ env.LAYER_VERSION_ARN }}